/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: AK STUDIO (https://sketchfab.com/inven2000)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/office-chair-af2f07d06f6349158c1d24d87f5ceb95
Title: Office chair
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export function Chair(props) {
  const { animation } = props;
  const chair = useRef();
  const { nodes, materials } = useGLTF("models/office_chair.glb");

  useFrame(() => {
    if (animation === "Typing") {
      if (chair.current.scale.x < 1) {
        chair.current.scale.x += 0.05;
        chair.current.scale.y += 0.05;
        chair.current.scale.z += 0.05;
      }
      if (chair.current.position.z > 0) {
        chair.current.position.z -= 0.1;
      }
      if (chair.current.position.z < 0) {
        chair.current.position.z += 0.1;
      }
    }
    if (animation !== "Typing") {
      if (chair.current.scale.x > 0) {
        chair.current.scale.x -= 0.05;
        chair.current.scale.y -= 0.05;
        chair.current.scale.z -= 0.05;
      }
      if (chair.current.position.z > -2) {
        chair.current.position.z -= 0.1;
      }
    }
  });
  return (
    <group ref={chair} scale={[0, 0, 0]}>
      <group {...props} dispose={null} position-y={0.5}>
        <group rotation={[-Math.PI / 2, 0, 0]} scale={0.531}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.defaultMaterial.geometry}
            material={materials.Chair}
            rotation={[Math.PI / 2, 0, 0]}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("models/office_chair.glb");
